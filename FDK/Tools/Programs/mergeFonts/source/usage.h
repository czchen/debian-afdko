"mergeFonts [-cid cidfontinfo file ] [-hints] output-font-file [[glyph alias file] merge-font-file]+\n",
"mergeFonts  [-u] [-h]\n",
" \n",
"This tool is based on the tx program.  If the output file mode (e.g -cff, -t1,\n",
"etc) specifed, then it will behave exactly as does tx. See 'tx -u'  for more\n",
"options, and 'tx -h' for details on these options.\n",
"  \n",
"This tool will merge one or more source fonts into a single font.  See\n",
"'mergeFonts -h' for more details.\n",
"\n",
"glyph alias file	file containing a mapping from source font glyph names to\n",
"	ouput font names. Must preceed the font to which it applies. If present,\n",
"	only the mapped glyphs are copied from the source font. See '-h' for format.\n",
"\n",
"[options]\n",
"-g <list>       glyph selector: tag, cid, or glyph name. May use ranges. Will\n",
"	subset the first source font only.\n",
" \n",
"-gx <list>       glyph exclusion selector: tag, cid, or glyph name. May use\n",
"	ranges. Will subset the first source font only. All glyphs except those\n",
"	listed are copied. The .notdef glyph will never be excluded.\n",
" \n",
"-cid <font-info path>    force the output font to be a CID-keyed font, even if\n",
"	the parent font is name-keyed. See -h for example, and for format of\n",
"	fontinfo file.\n",
"\n",
"  -hints  This option can be used only with Type 1 fonts, and with only two\n",
"  	source fonts. It copies the font global metrics and hint data from the\n",
"  	first font, and the glyph data and font name from the second font.\n",
"\n",
"[other options]\n",
"-u              print usage\n",
"-h              print help\n",
"-v              print component versions\n",
"\n",
"Example:\n",
"  mergeFonts -gx .notdef newFont.pfa srcFont1.pfa  mapFile2.txt srcFont2.pfa\n",
"  \n",
"This command will create a new font file 'newFont.pfa'. This will contain all\n",
"the glyphs ecxept '.notdef' from srcFont1.pfa, and all the glyphs from\n",
"srcFont2.pfa that are referenced in mapFile2.txt.\n",
